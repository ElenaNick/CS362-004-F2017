        -:    0:Source:testme.c
        -:    0:Graph:testme.gcno
        -:    0:Data:testme.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    0:Source is newer than graph
        -:    1:#include<stdio.h>
        -:    2:#include<string.h>
        -:    3:#include<stdlib.h>
        -:    4:#include<time.h>
        -:    5:
function inputChar called 24919 returned 100% blocks executed 100%
    24919:    6:char inputChar()
        -:    7:{
        -:    8:    // TODO: rewrite this function
    24919:    9:    char c[20]  = {'[', '(', '{', ' ', 'a', 'x', '}', ')', ']'};
        -:   10:    int i;
   299028:   11:    for(i = 9; i < 20; i++)
branch  0 taken 92%
branch  1 taken 8% (fallthrough)
   274109:   12:	    c[i] = rand()%26 + 97;
call    0 returned 100%
    24919:   13:    return c[rand()%20];
call    0 returned 100%
        -:   14:}
        -:   15:
function inputString called 24919 returned 100% blocks executed 100%
    24919:   16:char *inputString()
        -:   17:{
        -:   18:    // TODO: rewrite this function
    24919:   19:    char str[]  = {'[', '(', '{', ' ', 'a', 'x', '}', ')', ']', 'r', 's', 't', 'e'};
        -:   20:
        -:   21:    int i;
        -:   22:    char s[6];
    24919:   23:    s[5] = '\0';
   149514:   24:    for(i = 0; i < 5; i++)
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
   124595:   25:	    s[i] = str[rand()%13];
call    0 returned 100%
        -:   26:
    24919:   27:    return s;
        -:   28:}
        -:   29:
function testme called 1 returned 0% blocks executed 100%
        1:   30:void testme()
        -:   31:{
        1:   32:  int tcCount = 0;
        -:   33:  char *s;
        -:   34:  char c;
        1:   35:  int state = 0;
        -:   36:  while (1)
        -:   37:  {
    24919:   38:    tcCount++;
    24919:   39:    c = inputChar();
call    0 returned 100%
    24919:   40:    s = inputString();
call    0 returned 100%
    24919:   41:    printf("Iteration %d: c = %c, s = %s, state = %d\n", tcCount, c, s, state);
call    0 returned 100%
        -:   42:
    24919:   43:    if (c == '[' && state == 0) state = 1;
branch  0 taken 5% (fallthrough)
branch  1 taken 95%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
    24919:   44:    if (c == '(' && state == 1) state = 2;
branch  0 taken 5% (fallthrough)
branch  1 taken 95%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
    24919:   45:    if (c == '{' && state == 2) state = 3;
branch  0 taken 5% (fallthrough)
branch  1 taken 95%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
    24919:   46:    if (c == ' '&& state == 3) state = 4;
branch  0 taken 5% (fallthrough)
branch  1 taken 95%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
    24919:   47:    if (c == 'a' && state == 4) state = 5;
branch  0 taken 7% (fallthrough)
branch  1 taken 93%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
    24919:   48:    if (c == 'x' && state == 5) state = 6;
branch  0 taken 7% (fallthrough)
branch  1 taken 93%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
    24919:   49:    if (c == '}' && state == 6) state = 7;
branch  0 taken 5% (fallthrough)
branch  1 taken 95%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
    24919:   50:    if (c == ')' && state == 7) state = 8;
branch  0 taken 5% (fallthrough)
branch  1 taken 95%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
    24919:   51:    if (c == ']' && state == 8) state = 9;
branch  0 taken 5% (fallthrough)
branch  1 taken 95%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
    24919:   52:    if (s[0] == 'r' && s[1] == 'e'
branch  0 taken 8% (fallthrough)
branch  1 taken 92%
branch  2 taken 9% (fallthrough)
branch  3 taken 91%
      162:   53:       && s[2] == 's' && s[3] == 'e'
branch  0 taken 7% (fallthrough)
branch  1 taken 93%
branch  2 taken 8% (fallthrough)
branch  3 taken 92%
        1:   54:       && s[4] == 't' && s[5] == '\0'
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
        1:   55:       && state == 9)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:   56:    {
        1:   57:      printf("error ");
call    0 returned 100%
        1:   58:      exit(200);
call    0 returned 0%
        -:   59:    }
    24918:   60:  }
        -:   61:}
        -:   62:
        -:   63:
function main called 1 returned 0% blocks executed 80%
        1:   64:int main(int argc, char *argv[])
        -:   65:{
        1:   66:    srand(time(NULL));
call    0 returned 100%
call    1 returned 100%
        1:   67:    testme();
call    0 returned 0%
    #####:   68:    return 0;
        -:   69:}
